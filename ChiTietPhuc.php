<?php
require_once "ChiTietDon.php";
require_once "ChiTietMay.php";

class ChiTietPhuc extends ChiTietMay
{
    private $soLuongChiTietCon;
    private $dsChiTietCon = [];
    private $loaiChiTiet;

    public function nhap()
    {
        parent::nhap(); // TODO: Change the autogenerated stub
        do {
            $this->soLuongChiTietCon = readline("Có Bao Nhiêu Chi Tiết Con:");
            if (!is_numeric($this->soLuongChiTietCon)) {
                echo "Số lượng chi tiết con phải là số, vui lòng thử lại \n";
            } elseif ($this->soLuongChiTietCon < 0) {
                echo "Số lượng chi tiết con không được âm, vui lòng thử lại \n";
            }elseif (!myIsInt($this->soLuongChiTietCon)){
                echo "Số lượng chi tiết không được là số thập phân, vui lòng thử lại \n";
            }
        } while (!is_numeric($this->soLuongChiTietCon) || $this->soLuongChiTietCon < 0 || !myIsInt($this->soLuongChiTietCon));
        for ($i = 0; $i < $this->soLuongChiTietCon; $i++) {
            do {
                $this->loaiChiTiet = readline("Chi Tiết Đơn => Nhập 1 || Chi Tiết Phức => Nhập 2 :");
                if ($this->loaiChiTiet != 1 && $this->loaiChiTiet != 2 || !is_numeric($this->loaiChiTiet)) {
                    echo "Vui lòng chỉ chọn 1 hoặc 2 \n";
                }
            } while ($this->loaiChiTiet != 1 && $this->loaiChiTiet != 2 || !is_numeric($this->loaiChiTiet));
            if ($this->loaiChiTiet == 1 || $this->loaiChiTiet == 2) {
                if ($this->loaiChiTiet == 1) {
                    $chiTietDon = new ChiTietDon();
                    $chiTietDon->nhap();
                    $this->dsChiTietCon[] = $chiTietDon;
                } else {
                    $chiTietPhuc = new ChiTietPhuc();
                    $chiTietPhuc->nhap();
                    $this->dsChiTietCon[] = $chiTietPhuc;
                }
            }
        }
    }

    public function xuat()
    {
        for ($i = 0; $i < $this->soLuongChiTietCon; $i++) {
            echo "Thong Tin Chi Tiet Phuc Thu " . ($i + 1) . "\n";
            print_r($this->dsChiTietCon[$i]);
        }
    }
    public function myIsInt($value)
    {
        return parent::myIsInt($value); // TODO: Change the autogenerated stub
    }

    public function tinhTien()
    {
        $tongTien = 0;
        for ($i = 0; $i < $this->soLuongChiTietCon; $i++) {
            $tongTien += $this->dsChiTietCon[$i]->tinhTien();
        }
        return $tongTien;
    }

    public function tinhKhoiLuong()
    {
        // TODO: Implement tinhKhoiLuong() method.
        $tongKhoiLuong = 0;
        for ($i = 0; $i < $this->soLuongChiTietCon; $i++) {
            $tongKhoiLuong += $this->dsChiTietCon[$i]->tinhKhoiLuong();
        }
        return $tongKhoiLuong;
    }
}
